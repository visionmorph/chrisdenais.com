---
import fs from "fs";
import path from "path";

const {
  href,
  text,
  icon,
  target = "_self",
  rel = "noopener noreferrer",
} = Astro.props;

// Helper to load SVG file as inline markup
let iconHTML = "";
if (icon) {
  if (icon.endsWith(".svg")) {
    const svgPath = path.resolve(Astro.srcDir, icon.startsWith("/") ? `.${icon}` : icon);
    try {
      iconHTML = fs.readFileSync(svgPath, "utf-8");
      // Replace hard-coded fills (e.g., fill="white") with fill="currentColor"
      iconHTML = iconHTML.replace(/fill="(?!none)[^"]*"/g, 'fill="currentColor"');
    } catch (err) {
      console.error(`⚠️ Could not load SVG at ${svgPath}:`, err);
    }
  } else {
    iconHTML = icon; // inline SVG string already passed
  }
}
---
<a href={href} target={target} rel={rel} class="link">
  <span class="link-text">{text}</span>
  {iconHTML && <span class="link-icon" set:html={iconHTML} />}
</a>

<style>
.link {
	color: #78a9ff;
	display: inline-flex;     /* align text and icon horizontally */
	align-items: center;
	cursor: pointer;
	overflow: visible;
	gap: 0.5em;              /* space between text and icon */
}

.link:hover {
	color: #a6c8ff;
	text-decoration-line: underline;
	text-decoration-thickness: 0.0625em;
	text-underline-offset: 0.15625em;
}

.link:active {
	outline-offset: -2px;
	outline: 2px solid #fff;
}

.link:focus {
	outline-offset: -2px;
	outline: 2px solid #fff;
}

.link:focus-visible {
	color: #fff;
}

.link-icon {
	display: inline-flex;
	width: 1em;
	height: 1em;
	color: inherit;           /* inherit link color */
}

.link-icon svg {
	width: 100%;
	height: 100%;
	fill: currentColor;        /* match text color */
}
</style>
